{"version":3,"sources":["helpers/RomanNumerals.ts","store/slices/roman.ts","components/styled/theme.ts","store/reducer/reducer.ts","store/store.ts","components/styled/animations.ts","components/styled/Button.tsx","components/styled/Container.tsx","components/styled/Content.tsx","components/styled/Footer.tsx","components/styled/Header.tsx","components/styled/Grid.tsx","components/styled/Column.tsx","components/styled/Row.tsx","components/styled/Message.tsx","components/styled/Output.tsx","components/styled/Wrapper.tsx","components/buttons/ButtonBase/ButtonBase.tsx","components/buttons/ButtonClear/ButtonClear.tsx","components/buttons/ButtonResult/ButtonResult.tsx","components/buttons/ButtonRoman/ButtonRoman.tsx","components/buttons/ButtonSwitch/ButtonSwitch.tsx","components/keyboards/KeyboardRoman/KeyboardRoman.tsx","components/outputs/ErrorMessage/ErrorMessage.tsx","components/outputs/OutputDisplay/OutputDisplay.tsx","components/pages/PageContainer/PageContainer.tsx","components/pages/PageContent/PageContent.tsx","components/pages/PageFooter/PageFooter.tsx","components/pages/PageHeader/PageHeader.tsx","components/buttons/ButtonNumeric/ButtonNumeric.tsx","components/keyboards/KeyboardNumeric/KeyboardNumeric.tsx","components/pages/PageMain/PageMain.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RomanNumerals","number","toString","match","Error","result","key","this","romanMap","repeat","Math","floor","numeral","literals","split","reduce","accumulator","literal","index","maxWidth","initialState","romanValue","numericValue","showResult","viewMode","error","undefined","romanSlice","createSlice","name","reducers","setRomanValue","state","payload","fromRoman","setNumericValue","parseInt","toRoman","setViewMode","toggleResult","reset","romanReducer","reducer","actions","store","configureStore","customMediaMinQuery","minWidth","theme","border","color","radius","width","colors","blue","green","red","white","lightGray","font","size","responsive","desktop","tablet","phablet","phone","pulse","keyframes","Button","styled","button","props","disabled","calc","clear","switch","Container","div","Content","Footer","span","Header","Grid","Column","Row","Message","Output","Wrapper","ButtonBase","useSelector","children","type","Boolean","ButtonClear","dispatch","useDispatch","onClick","data-testid","ButtonResult","ButtonRoman","ButtonSwitch","KeyboardRoman","ErrorMessage","errorMessage","OutputDisplay","PageContainer","PageContent","PageFooter","madeBy","year","url","href","target","rel","PageHeader","title","subTitle","Title","SubTitle","ButtonNumeric","KeyboardNumeric","PageMain","Keyboard","ShowError","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d074102.chunk.js","sourcesContent":["export class RomanNumerals {\n  static romanMap: { [key: string]: number } = {\n    'M': 1000,\n    'CM': 900,\n    'D': 500,\n    'CD': 400,\n    'C': 100,\n    'XC': 90,\n    'L': 50,\n    'XL': 40,\n    'X': 10,\n    'IX': 9,\n    'V': 5,\n    'IV': 4,\n    'I': 1,\n  };\n\n  static toRoman(number: number): string {\n    if (!number.toString().match(/\\d/)) {\n      throw new Error('the number is invalid');\n    }\n\n    let result = '';\n    for (const key in this.romanMap) {\n      result += key.repeat(Math.floor(number / this.romanMap[key]));\n      number %= this.romanMap[key];\n    }\n\n    return result;\n  }\n\n  static fromRoman(numeral: string): number {\n    if (!numeral.match(/^(?=[MDCLXVI])M*(C[MD]|D?C{0,3})(X[CL]|L?X{0,3})(I[XV]|V?I{0,3})$/)) {\n      throw new Error('the literal is invalid');\n    }\n\n    const literals = numeral.split('');\n\n    return literals.reduce((accumulator: number, literal: string, index: number) => {\n      if (index > 0 && this.romanMap[literals[index - 1]] < this.romanMap[literal]) {\n        return accumulator + (this.romanMap[literal] - (this.romanMap[literals[index - 1]] * 2));\n      }\n      return accumulator + this.romanMap[literal];\n    }, 0);\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RomanNumerals } from '../../helpers';\n\ntype ViewModeType = 'roman' | 'numeric';\ntype ErrorType = 'maxNumberReached' | 'invalidRomanValue'\n\nexport interface State {\n  romanValue: string\n  numericValue: string\n  showResult: boolean\n  viewMode: ViewModeType\n  error: ErrorType | undefined\n}\n\nexport const initialState: State = {\n  romanValue: '',\n  numericValue: '',\n  showResult: false,\n  viewMode: 'roman',\n  error: undefined,\n};\n\nconst romanSlice = createSlice({\n  name: 'roman',\n  initialState: initialState,\n  reducers: {\n    setRomanValue: (state, { payload }: PayloadAction<string>) => {\n      state.romanValue += payload;\n      try {\n        state.numericValue = RomanNumerals.fromRoman(state.romanValue).toString();\n      } catch (error: any) {\n        state.error = 'invalidRomanValue';\n      }\n\n    },\n    setNumericValue: (state, { payload }: PayloadAction<string>) => {\n      state.numericValue += payload;\n      if (parseInt(state.numericValue) <= 3999) {\n        state.romanValue = RomanNumerals.toRoman(parseInt(state.numericValue));\n      } else {\n        state.error = 'maxNumberReached';\n      }\n    },\n    setViewMode: (state, { payload }: PayloadAction<ViewModeType>) => {\n      state.viewMode = payload;\n    },\n    toggleResult: (state) => {\n      if (state.numericValue !== '') {\n        state.showResult = !state.showResult;\n      }\n    },\n    reset: (state) => {\n      state.numericValue = initialState.numericValue;\n      state.romanValue = initialState.romanValue;\n      state.error = initialState.error;\n      state.showResult = initialState.showResult;\n    },\n  },\n});\n\nexport const romanReducer = romanSlice.reducer;\nexport const { setRomanValue, setNumericValue, setViewMode, toggleResult, reset } = romanSlice.actions;\n","import { DefaultTheme } from 'styled-components';\n\nexport const customMediaMinQuery = (minWidth: number) => `@media (min-width: ${ minWidth }px)`;\nexport const customMediaMaxQuery = (maxWidth: number) => `@media (max-width: ${ maxWidth }px)`;\n\nexport const theme: DefaultTheme = {\n  border: {\n    color: '#333333',\n    radius: '3px',\n    width: '1px',\n  },\n  colors: {\n    blue: '#0275D8',\n    green: '#5CB85C',\n    red: '#D9534F',\n    white: 'white',\n    lightGray: '#ECEFF1',\n  },\n  font: {\n    color: 'black',\n    size: '1.5em',\n  },\n  responsive: {\n    desktop: customMediaMinQuery(1540),\n    tablet: customMediaMinQuery(1024),\n    phablet: customMediaMinQuery(768),\n    phone: customMediaMaxQuery(768),\n  },\n};\n","import { romanReducer } from '../slices/roman';\n\nconst reducer = {\n  romanReducer,\n};\n\nexport default reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport reducer from './reducer/reducer';\n\nexport const store = configureStore({ reducer });\nexport type Store = ReturnType<typeof store.getState>;\n","import { keyframes } from 'styled-components';\n\nexport const pulse = keyframes`\n  0% {\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0.2);\n  }\n  100% {\n    box-shadow: 0 0 0 20px rgba(0, 0, 0, 0);\n  }\n`;\n","import styled from 'styled-components';\nimport { pulse } from './animations';\n\ninterface Props {\n  calc?: boolean\n  clear?: boolean\n  switch?: boolean\n  error?: boolean\n}\n\nexport const Button = styled.button<Props>`\n  background-color: ${\n    props => props.disabled ? props.theme.colors.lightGray :\n      props.calc ? props.theme.colors.green :\n      props.clear ? props.theme.colors.red :\n        props.switch ? props.theme.colors.blue :\n          \n          'white'\n  };\n  color: ${\n    props => props.calc || props.clear || props.switch || props.disabled ? 'white' : 'inherit'\n  };\n  border-radius: ${ props => props.theme.border.radius };\n  border: ${ \n    props => `${ \n      props.theme.border.width } solid ${ props.disabled ? \n      props.theme.colors.lightGray : props.theme.border.color \n    }` \n  };\n  font-size: ${ props => props.theme.font.size };\n  font-weight: ${ props => props.clear || props.calc ? 700 : 'inherit' };\n  height: 50px;\n  margin: 1em;\n  padding: 0.25em 1em;\n  width: ${ props => props.switch ? '100%' : '65px' };\n  animation-name: ${ props => props.error ? pulse : '' };\n  animation-duration: 2s;\n  animation-iteration-count: infinite;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  width: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const Content = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  \n  ${ props => props.theme.responsive.phone } {\n    width: 100%;\n  }\n  \n  ${ props => props.theme.responsive.phablet } {\n    width: 75%;\n  }\n  \n  ${ props => props.theme.responsive.tablet } {\n    width: 50%;\n  }\n  \n  ${ props => props.theme.responsive.desktop } {\n    width: 30%;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Footer = styled.span`\n  align-items: center;\n  display: flex;\n  height: 80px;\n  justify-content: center;\n  width: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const Header = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const Grid = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  margin-top: 20px\n`;\n","import styled from 'styled-components';\n\nexport const Column = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1 1 30%;\n  justify-content: center;\n`;\n","import styled from 'styled-components';\n\nexport const Row = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import styled from 'styled-components';\n\nexport const Message = styled.span`\n  padding: 20px;\n  color: ${ props => props.theme.colors.red };\n  font-size: ${ props => props.theme.font.size };\n`;\n","import styled from 'styled-components';\n\ninterface Props {\n  error?: boolean\n  showResult?: boolean\n}\n\nexport const Output = styled.span<Props>`\n  align-items: center;\n  border: ${ props => `${ props.theme.border.width } solid ${ props.theme.border.color }` };\n  background-color: ${\n    props => props.error ? props.theme.colors.red :\n      props.showResult ? props.theme.colors.green :\n        props.theme.colors.white\n  };\n  color: ${ props => props.error || props.showResult ? props.theme.colors.white : 'inherit' };\n  display: flex;\n  font-size: 2em;\n  font-weight: 700;\n  height: 70px;\n  justify-content: center;\n  margin-top: 20px;\n  text-align: center;\n  width: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  margin: 20px;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Store } from '../../../store/store';\nimport { Button } from '../../styled';\n\ninterface Props extends React.HTMLAttributes<HTMLButtonElement> {\n  calc?: boolean\n}\n\nexport const ButtonBase = (props: Props) => {\n  const { showResult, error } = useSelector((state: Store) => state.romanReducer);\n  const { children } = props;\n\n  return (\n    <Button type=\"button\" disabled={ showResult || Boolean(error) } {...props}>{ children }</Button>\n  );\n};\n","import { Button } from '../../styled';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { reset } from '../../../store/slices/roman';\nimport { Store } from '../../../store/store';\n\nexport const ButtonClear = () => {\n  const dispatch = useDispatch();\n  const { error, showResult } = useSelector((state: Store) => state.romanReducer);\n\n  const handleClick = () => {\n    dispatch(reset());\n  };\n\n  return (\n    <Button clear error={Boolean(error) || showResult} type=\"button\" onClick={ handleClick } data-testid=\"clear\">C</Button>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toggleResult } from '../../../store/slices/roman';\nimport { ButtonBase } from '../ButtonBase/ButtonBase';\n\nexport const ButtonResult = () => {\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(toggleResult());\n  };\n\n  return (\n    <ButtonBase calc onClick={ handleClick }>=</ButtonBase>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setRomanValue } from '../../../store/slices/roman';\nimport { ButtonBase } from '../ButtonBase/ButtonBase';\n\ninterface Props {\n  children: string;\n}\n\nexport const ButtonRoman = (props: Props) => {\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(setRomanValue(children));\n  };\n\n  const { children } = props;\n  return (\n    <ButtonBase onClick={ handleClick }>{ children }</ButtonBase>\n  );\n};\n","import { Button } from '../../styled';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setViewMode } from '../../../store/slices/roman';\nimport { Store } from '../../../store/store';\n\nexport const ButtonSwitch = () => {\n  const dispatch = useDispatch();\n  const { viewMode } = useSelector((state: Store) => state.romanReducer);\n\n  const handleClick = () => {\n    if (viewMode === 'numeric') {\n      dispatch(setViewMode('roman'));\n    } else {\n      dispatch(setViewMode('numeric'));\n    }\n  };\n\n  return (\n    <Button switch type=\"button\" onClick={ handleClick }>switch view</Button>\n  );\n};\n","import React from 'react';\nimport { ButtonClear } from '../../buttons/ButtonClear/ButtonClear';\nimport { ButtonResult } from '../../buttons/ButtonResult/ButtonResult';\nimport { ButtonRoman } from '../../buttons/ButtonRoman/ButtonRoman';\nimport { Column, Row } from '../../styled';\nimport { Grid } from '../../styled/Grid';\n\nexport const KeyboardRoman = () => {\n  return (\n    <Grid>\n      <Row>\n        <Column>\n          <ButtonRoman>C</ButtonRoman>\n        </Column>\n        <Column>\n          <ButtonRoman>D</ButtonRoman>\n        </Column>\n        <Column>\n          <ButtonRoman>M</ButtonRoman>\n        </Column>\n        <Column>\n          <ButtonRoman>V</ButtonRoman>\n        </Column>\n        <Column>\n          <ButtonRoman>X</ButtonRoman>\n        </Column>\n        <Column>\n          <ButtonRoman>L</ButtonRoman>\n        </Column>\n        <Column>\n          <ButtonClear></ButtonClear>\n        </Column>\n        <Column>\n          <ButtonRoman>I</ButtonRoman>\n        </Column>\n        <Column>\n          <ButtonResult></ButtonResult>\n        </Column>\n      </Row>\n    </Grid>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Store } from '../../../store/store';\nimport { Message } from '../../styled';\n\nexport const INVALID_NUMERIC_MESSAGE = 'The maximum value is 3999.';\nexport const INVALID_ROMAN_MESSAGE = 'Invalid roman numeral';\n\nexport const ErrorMessage = () => {\n  const { error } = useSelector((state: Store) => state.romanReducer);\n\n  const errorMessage: string = error === 'invalidRomanValue' ? INVALID_ROMAN_MESSAGE :\n    error === 'maxNumberReached' ? INVALID_NUMERIC_MESSAGE :\n      '';\n\n  return (\n    <Message>{ errorMessage }</Message>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Store } from '../../../store/store';\nimport { Output } from '../../styled';\n\nexport const OutputDisplay = () => {\n  const { romanValue, numericValue, viewMode, showResult, error } = useSelector((state: Store) => state.romanReducer);\n\n  const showResultViewMode = (): string => {\n    if (showResult) {\n      if (viewMode === 'numeric') {\n        return romanValue;\n      }\n      return numericValue;\n    } else {\n      if (viewMode === 'numeric') {\n        return numericValue;\n      }\n      return romanValue;\n    }\n  };\n\n  return (\n    <Output error={ Boolean(error) } showResult={ showResult }>\n      { showResultViewMode() }\n    </Output>\n  );\n};\n","import React from 'react';\nimport { Container, Wrapper } from '../../styled';\n\ninterface Props {\n  children: any\n}\n\nexport const PageContainer = (props: Props) => {\n  const { children } = props;\n\n  return (\n    <Wrapper>\n      <Container>\n        { children }\n      </Container>\n    </Wrapper>\n  );\n};\n","import React from 'react';\nimport { Content } from '../../styled';\n\ninterface Props {\n  children: any\n}\n\nexport const PageContent = (props: Props) => {\n  const { children } = props;\n\n  return (\n    <Content>\n      { children }\n    </Content>\n  );\n};\n","import React from 'react';\nimport { Footer } from '../../styled';\n\ninterface Props {\n  madeBy: any\n  year: number\n  url: string\n}\n\n\n\nexport const PageFooter = (props: Props) => {\n  const { madeBy, year, url } = props;\n\n  return (\n    <Footer data-testid=\"footer\">Made by &nbsp;<a href={ url } target=\"_blank\" rel=\"noreferrer\">{ madeBy }</a>&nbsp; in { year }.</Footer>\n  );\n};\n","import React from 'react';\nimport { Header } from '../../styled';\n\ninterface Props {\n  title: string;\n  subTitle: string;\n}\n\nexport const PageHeader = (props: Props) => {\n  const { title, subTitle } = props;\n\n  const Title: JSX.Element = (<div><h1>{ title }</h1></div>);\n  const SubTitle: JSX.Element = (<div><h2>{ subTitle }</h2></div>);\n\n  return (\n    <Header data-testid=\"header\">\n      { Title }\n      { SubTitle }\n    </Header>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setNumericValue } from '../../../store/slices/roman';\nimport { ButtonBase } from '../ButtonBase/ButtonBase';\n\ninterface Props {\n  children: string;\n}\n\nexport const ButtonNumeric = (props: Props) => {\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(setNumericValue(children));\n  };\n\n  const { children } = props;\n  return (\n    <ButtonBase onClick={ handleClick }>{ children }</ButtonBase>\n  );\n};\n","import React from 'react';\nimport { Column, Row } from '../../styled';\nimport { Grid } from '../../styled';\nimport { ButtonNumeric } from '../../buttons/ButtonNumeric/ButtonNumeric';\nimport { ButtonClear } from '../../buttons/ButtonClear/ButtonClear';\nimport { ButtonResult } from '../../buttons/ButtonResult/ButtonResult';\n\nexport const KeyboardNumeric = () => {\n  return (\n    <Grid>\n      <Row>\n        <Column>\n          <ButtonNumeric>7</ButtonNumeric>\n        </Column>\n        <Column>\n          <ButtonNumeric>8</ButtonNumeric>\n        </Column>\n        <Column>\n          <ButtonNumeric>9</ButtonNumeric>\n        </Column>\n        <Column>\n          <ButtonNumeric>4</ButtonNumeric>\n        </Column>\n        <Column>\n          <ButtonNumeric>5</ButtonNumeric>\n        </Column>\n        <Column>\n          <ButtonNumeric>6</ButtonNumeric>\n        </Column>\n        <Column>\n          <ButtonNumeric>1</ButtonNumeric>\n        </Column>\n        <Column>\n          <ButtonNumeric>2</ButtonNumeric>\n        </Column>\n        <Column>\n          <ButtonNumeric>3</ButtonNumeric>\n        </Column>\n        <Column>\n          <ButtonClear/>\n        </Column>\n        <Column>\n          <ButtonNumeric>0</ButtonNumeric>\n        </Column>\n        <Column>\n          <ButtonResult/>\n        </Column>\n      </Row>\n    </Grid>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Store } from '../../../store/store';\nimport { PageHeader } from '../PageHeader/PageHeader';\nimport { PageContent } from '../PageContent/PageContent';\nimport { OutputDisplay } from '../../outputs/OutputDisplay/OutputDisplay';\nimport { KeyboardNumeric } from '../../keyboards/KeyboardNumeric/KeyboardNumeric';\nimport { KeyboardRoman } from '../../keyboards/KeyboardRoman/KeyboardRoman';\nimport { PageFooter } from '../PageFooter/PageFooter';\nimport { PageContainer } from '../PageContainer/PageContainer';\nimport { ButtonSwitch } from '../../buttons/ButtonSwitch/ButtonSwitch';\nimport { ErrorMessage } from '../../outputs/ErrorMessage/ErrorMessage';\n\nexport const PageMain = () => {\n  const { viewMode, error } = useSelector((state: Store) => state.romanReducer);\n\n  const Keyboard = (): JSX.Element => {\n    return viewMode === 'numeric' ? <KeyboardNumeric/> : <KeyboardRoman/>\n  }\n\n  const ShowError = (): JSX.Element | null => Boolean(error) ? <ErrorMessage/> : null;\n\n  return (\n    <PageContainer>\n      <PageHeader title=\"Roman numerals for kids\" subTitle=\"This is a simple roman numerals converter. Enjoy!\"/>\n      <PageContent>\n        <OutputDisplay/>\n        <ShowError/>\n        <Keyboard/>\n        <ButtonSwitch/>\n      </PageContent>\n      <PageFooter madeBy=\"Alessandro Pinto\" year={ 2021 } url=\"https://github.com/alemp\"/>\n    </PageContainer>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from './components/styled/theme';\nimport { PageMain } from './components';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={ theme }>\n      <Provider store={ store }>\n        <PageMain/>\n      </Provider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}